% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/power_calculation.R
\name{permutation_power}
\alias{permutation_power}
\title{Power calculation for the permutation test}
\usage{
permutation_power(mu1 = 0, Sigma = diag(length(mu1)), n1 = 10L,
  n2 = NULL, MC = 1000L, alpha = 0.05, paired = FALSE, step_size = 0,
  B = 1000L, statistic = "Hotelling", mc.cores = 1L)
}
\arguments{
\item{mu1}{True mean function or difference between mean functions
(default: 0).}

\item{Sigma}{True covariance matrix \eqn{\Sigma} (default: 1).}

\item{n1}{Sample size of data pertaining to the 1st population (default: 10).}

\item{n2}{Sample size of data pertaining to the 2nd population (default:
\code{NULL}).}

\item{MC}{Number of Monte-Carlo runs to estimate statistical power (default:
1000).}

\item{alpha}{Significance level (default: 0.05).}

\item{paired}{Is the input data paired? (default: \code{FALSE}).}

\item{step_size}{The step size used to perform integral approximation via the
method of rectangles (default: \code{0}). When set to \code{0}, it assumes
that we are dealing with multivariate data rather than functional data and
thus no integration is necessary.}

\item{B}{Number of bootstrap permutations (default: 1000).}

\item{statistic}{Statistic to be used within the permutation framework.
Choices are Hotelling (default), L1, L2, Linf, StandardizedL1,
StandardizedL2, StandardizedLinf and All.}

\item{mc.cores}{Number of cores to run the estimation on (default: 1).}
}
\value{
An estimate of the statistical power of the test.
}
\description{
\code{permutation_power} computes an estimate of the statistical power of
permutation-based test on the mean function (or on the difference between
mean functions) using Monte-Carlo simulations.
}
\details{
This function computes the statistical power of permutation-based tests using
a set of user-specified statistics. The power calculation relies on a
specific generative model. It is assumed that data is generated from a
Gaussian distribution. The user-defined inputs are
\itemize{
\item \code{mu1}: a numeric vector containing the actual mean function of the
distribution (or difference between mean functions) evaluated in a pointwise
fashion on a uniform grid.
\item \code{Sigma}: a numeric matrix containing the actual covariance kernel
of the distribution (or pooled covariance kernel) evaluated in a pointwise
fashion on a uniform grid.
}
}
\examples{
# Set the sample sizes for a two-sample test
n1 <- 10
n2 <- 10
# Set the dimensionality for curve approximation
p <- 100
# Set the actual covariance kernel
Sigma <- diag(1, p)
#----------------------------------------------------------------------------
# The following lines of code computes the actual significance level of the
# test and runs in about 1 minute on a single core. Computation time is
# linear in the number of cores and does not depend on the statistic or the
# number of statistics used in the testing procedure.
mu1 <- rep(0, p)
permutation_power(mu1, Sigma, n1, n2, MC = 100, B = 250)
#----------------------------------------------------------------------------
# Usually, it is recommended to set MC = 1000 and B = 1000, which would take
# about 40 minutes. However, this function is parallelized and can be run on
# multiple cores by setting the optional argument mc.cores to a suitable
# integer. On a computer with 4 physical cores, the following lines of code
# runs in about 10 minutes:
\dontrun{
mu1 <- rep(0, p)
permutation_power(mu1, Sigma, n1, n2, MC = 1000, B = 1000, mc.cores = 4)
}
#----------------------------------------------------------------------------
# We can use more complex covariance matrices and compute an estimate of the
# statistical power of the test for a given non-null mean difference.
\dontrun{
mu1 <- rep(4, p)
s <- seq(-1, 1, length.out = 100)
Sigma <- outer(s, s, function(t, s) exp(-abs(t - s)))
permutation_power(mu1, Sigma, n1, n2, MC = 1000, B = 1000, mc.cores = 4)
}
}
\seealso{
The underlying statistical test is described in details in the
 technical report by Pini, A., Stamm, A., & Vantini, S. (2015).
 \emph{Hotelling \eqn{T^2} in functional Hilbert spaces}, available online
 at \url{https://mox.polimi.it/publication-results/?id=524&tipo=add_qmox}.
}
